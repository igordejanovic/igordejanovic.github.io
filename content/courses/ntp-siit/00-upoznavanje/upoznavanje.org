#+TITLE: Напредне технике програмирања
#+SUBTITLE: О предмету
#+EXPORT_FILE_NAME: index.html
#+SETUPFILE: ../../courses-startup.org

* Опште информације
- Фонд часова: 2+2
- Предметни наставник: [[https://igordejanovic.net/][проф. др Игор Дејановић]] (igord na uns ac rs)
- Предметни асистенти:
  - MSc. Владимир Инђић (vladaindjic na uns ac rs)
  - MSc. Душан Николић (nikolic.dusan na uns.ac.rs)
- Материјали за предавања су доступни на:
  - https://www.igordejanovic.net/courses/ntp-siit/
- Материјали за вежбе биће доступни преко GitHub-а и Гугл групе.
- Комуникација:
  - Гугл група: https://groups.google.com/g/ntp-siit-2023
  - e-mail
- Консултације се обављају по потреби уз најаву на email

* Циљ предмета
- Упознавање са мање коришћеним напредним техникама, технологијама и језицима
  намењених решавању специфичних класа проблема
- Излагање студената различитим парадигмама програмирања
- Размишљање "изван кутије" (/out-of-the-box/)
- Прави језик/алат за проблем који се решава

* Тематске целине
1. Напредне технике на програмском језику /Python/ (метакласе, цонтеxт манагерс,
   дескриптори, функционално, async/await...) - 2 недење
2. Основе програмског језика /Smalltalk-a/Pharo/ (ООП, прослеђивање порука, "живи"
   објекти) - 2 недеље
3. Програмски језик /Rust/ (системско програмирање, генеричко програмирање,
   сигурно управљање меморијом, сигурност у конкурентном програмирању) - 7
   недеља

* Начин полагања
- Полагање путем писменог испита/теста. Два термина.
  - Кратки задаци
  - Теоријска питања са кратким одговорима
  - Ради се на папиру
- Додатно за +2 оцену ко није задовољан оценом са теста (или ко не положи тест
  за оцену 7) - пројекат.
  - Самостални пројекти на предефинисане теме или тема осмишљена од стране
    студента и одобрена од стране асистента и професора
  - /Важно: пројекат мора комбиновати бар 2 од обрађена 3 програмска језика/

* Референце
- Stéphane Ducasse, Dmitri Zagidulin, Nicolai Hess, Dimitris Chloupis, [[http://books.pharo.org/pharo-by-example/][Pharo by
  Example]], Square Brackets Associates, 2017.
- Steve Klabnik and Carol Nichols, with contributions from the Rust Community,
  [[https://doc.rust-lang.org/stable/book/][The Rust Programming Language]]
- [[https://doc.rust-lang.org/stable/rust-by-example/index.html][Rust by Example]]
- [[https://rust-unofficial.github.io/patterns/][Rust Design Patterns]]
- Jim Blandy, Jason Orendorff, Leonora F.S. Tindall, Programming Rust: Fast,
  Safe Systems Development, 2 ed., O'Reilly, 2021.
- [[https://github.com/rust-lang/rustlings][Rustlings]]
- Google's [[https://google.github.io/comprehensive-rust/][Comprehensive Rust]]
- [[https://github.com/TheAlgorithms/Rust][Algorithms implemented in Rust]]
